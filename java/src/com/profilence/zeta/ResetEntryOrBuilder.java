// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connector_service.proto

package com.profilence.zeta;

public interface ResetEntryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:profilence.zeta.ResetEntry)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string run_id = 1;</code>
   * @return The runId.
   */
  java.lang.String getRunId();
  /**
   * <code>string run_id = 1;</code>
   * @return The bytes for runId.
   */
  com.google.protobuf.ByteString
      getRunIdBytes();

  /**
   * <code>double timestamp = 2;</code>
   * @return The timestamp.
   */
  double getTimestamp();

  /**
   * <code>int32 type = 3;</code>
   * @return The type.
   */
  int getType();

  /**
   * <code>map&lt;string, string&gt; reasons = 4;</code>
   */
  int getReasonsCount();
  /**
   * <code>map&lt;string, string&gt; reasons = 4;</code>
   */
  boolean containsReasons(
      java.lang.String key);
  /**
   * Use {@link #getReasonsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getReasons();
  /**
   * <code>map&lt;string, string&gt; reasons = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getReasonsMap();
  /**
   * <code>map&lt;string, string&gt; reasons = 4;</code>
   */

  java.lang.String getReasonsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; reasons = 4;</code>
   */

  java.lang.String getReasonsOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  int getPropertiesCount();
  /**
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  boolean containsProperties(
      java.lang.String key);
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProperties();
  /**
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPropertiesMap();
  /**
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */

  java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */

  java.lang.String getPropertiesOrThrow(
      java.lang.String key);
}
